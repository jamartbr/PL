No terminales inútiles en la gramática

    declar_funcion
    cabec_funcion
    parametros
    parametro
    tipo_var


Reglas inútiles en la gramática

   87 declar_funciones: declar_funcion declar_funciones

   88 declar_funcion: cabec_funcion bloque

   89 cabec_funcion: tipo_var ID PARIZQ parametros PARDCH

   90 parametros: parametro COMA parametros

   91 parametro: tipo_var ID

   92 tipo_var: tipo_var_elem
   93         | TIPOLISTA tipo_var_elem


Estado 30 conflictos: 1 desplazamiento/reducción
Estado 62 conflictos: 4 desplazamiento/reducción
Estado 78 conflictos: 1 desplazamiento/reducción
Estado 110 conflictos: 5 desplazamiento/reducción
Estado 131 conflictos: 5 desplazamiento/reducción
Estado 135 conflictos: 5 desplazamiento/reducción
Estado 158 conflictos: 5 desplazamiento/reducción


Gramática

    0 $accept: programa $end

    1 programa: TIPOINT MAIN bloque

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones sentencias LLAVEDCH PYC

    3 declar_var_locales: LOCAL LLAVEIZQ var_locales LLAVEDCH
    4                   | ε

    5 var_locales: cuerpo_declar_var var_locales
    6            | cuerpo_declar_const var_locales
    7            | cuerpo_declar_var
    8            | cuerpo_declar_const

    9 cuerpo_declar_var: tipo_var_elem nombres PYC
   10                  | TIPOLISTA tipo_var_elem nombres PYC

   11 nombres: ID COMA nombres
   12        | ID

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID ASING exp_no_lista PYC
   14                    | TIPOCONST TIPOLISTA tipo_var_elem ID ASING CORIZQ items CORDCH PYC
   15                    | TIPOCONST TIPOLISTA TIPOCHAR ID ASING CORIZQ CADENA CORDCH PYC

   16 items: exp COMA items
   17      | exp
   18      | ε

   19 declar_funciones: ε

   20 sentencias: sentencia sentencias PYC
   21           | sentencia PYC
   22           | ε

   23 sentencia: bloque
   24          | sentencia_asig
   25          | sentencia_if
   26          | sentencia_while
   27          | sentencia_entrada
   28          | sentencia_salida
   29          | sentencia_return
   30          | sentencia_do_until
   31          | sentencia_funcion
   32          | sentencia_lista

   33 sentencia_asig: ID ASING exp
   34               | ID ASING CORIZQ items CORDCH
   35               | ID ASING CORIZQ CADENA CORDCH

   36 sentencia_if: IF PARIZQ exp PARDCH bloque
   37             | IF PARIZQ exp PARDCH bloque ELSE bloque

   38 sentencia_while: WHILE PARIZQ exp PARDCH bloque

   39 sentencia_entrada: CIN SIG datos_entrada

   40 datos_entrada: exp SIG datos_entrada
   41              | exp

   42 sentencia_salida: COUT ANT datos_salida

   43 datos_salida: dato_salida SIG datos_salida
   44             | dato_salida

   45 dato_salida: exp
   46            | CADENA

   47 sentencia_return: RETURN exp

   48 sentencia_do_until: DO bloque UNTIL PARIZQ exp PARDCH

   49 sentencia_funcion: ID PARIZQ items PARDCH

   50 sentencia_lista: ID SIG
   51                | ID ANT
   52                | DOLLAR ID

   53 exp_simple: NUMERO
   54           | CHAR
   55           | VALBOOL
   56           | ID

   57 exp: exp_no_lista
   58    | exp_lista

   59 exp_no_lista: op_monario exp
   60             | exp op_binario exp
   61             | PARIZQ exp PARDCH
   62             | exp_simple

   63 exp_lista: op_monario_lista ID
   64          | ID op_binario_lista ENTERO
   65          | ENTERO PLUS ID
   66          | ENTERO TIMES ID
   67          | ID AT exp
   68          | ID PLUSPLUS ENTERO AT exp
   69          | ID TIMESTIMES ID

   70 op_monario: OPEMON
   71           | PLUS
   72           | MINUS

   73 op_binario: PLUS
   74           | MINUS
   75           | TIMES
   76           | OPEBINLIST
   77           | OPEBIN

   78 op_monario_lista: OPEMONLIST

   79 op_binario_lista: OPEBINLIST
   80                 | MINUSMINUS
   81                 | PLUS
   82                 | MINUS
   83                 | TIMES

   84 tipo_var_elem: TIPOVAR
   85              | TIPOCHAR
   86              | TIPOINT


Terminales con las reglas donde aparecen

    $end (0) 0
    error (256)
    WHILE (258) 38
    DO (259) 48
    UNTIL (260) 48
    IF (261) 36 37
    ELSE (262) 37
    CIN (263) 39
    COUT (264) 42
    MAIN (265) 1
    RETURN (266) 47
    LOCAL (267) 3
    TIPOINT (268) 1 86
    TIPOCHAR (269) 15 85
    TIPOVAR (270) 84
    TIPOLISTA (271) 10 14 15
    TIPOCONST (272) 13 14 15
    VALBOOL (273) 55
    PARIZQ (274) 36 37 38 48 49 61
    PARDCH (275) 36 37 38 48 49 61
    LLAVEIZQ (276) 2 3
    LLAVEDCH (277) 2 3
    CORIZQ (278) 14 15 34 35
    CORDCH (279) 14 15 34 35
    PYC (280) 2 9 10 13 14 15 20 21
    COMA (281) 11 16
    ASING (282) 13 14 15 33 34 35
    OPEMON (283) 70
    OPEBIN (284) 77
    SIG (285) 39 40 43 50
    ANT (286) 42 51
    DOLLAR (287) 52
    OPEMONLIST (288) 78
    OPEBINLIST (289) 76 79
    AT (290) 67 68
    PLUSPLUS (291) 68
    MINUSMINUS (292) 80
    TIMESTIMES (293) 69
    PLUS (294) 65 71 73 81
    MINUS (295) 72 74 82
    TIMES (296) 66 75 83
    CHAR (297) 54
    CADENA (298) 15 35 46
    NUMERO (299) 53
    ENTERO (300) 64 65 66 68
    ID (301) 11 12 13 14 15 33 34 35 49 50 51 52 56 63 64 65 66 67 68 69


No terminales con las reglas donde aparecen

    $accept (47)
        on left: 0
    programa (48)
        on left: 1
        on right: 0
    bloque (49)
        on left: 2
        on right: 1 23 36 37 38 48
    declar_var_locales (50)
        on left: 3 4
        on right: 2
    var_locales (51)
        on left: 5 6 7 8
        on right: 3 5 6
    cuerpo_declar_var (52)
        on left: 9 10
        on right: 5 7
    nombres (53)
        on left: 11 12
        on right: 9 10 11
    cuerpo_declar_const (54)
        on left: 13 14 15
        on right: 6 8
    items (55)
        on left: 16 17 18
        on right: 14 16 34 49
    declar_funciones (56)
        on left: 19
        on right: 2
    sentencias (57)
        on left: 20 21 22
        on right: 2 20
    sentencia (58)
        on left: 23 24 25 26 27 28 29 30 31 32
        on right: 20 21
    sentencia_asig (59)
        on left: 33 34 35
        on right: 24
    sentencia_if (60)
        on left: 36 37
        on right: 25
    sentencia_while (61)
        on left: 38
        on right: 26
    sentencia_entrada (62)
        on left: 39
        on right: 27
    datos_entrada (63)
        on left: 40 41
        on right: 39 40
    sentencia_salida (64)
        on left: 42
        on right: 28
    datos_salida (65)
        on left: 43 44
        on right: 42 43
    dato_salida (66)
        on left: 45 46
        on right: 43 44
    sentencia_return (67)
        on left: 47
        on right: 29
    sentencia_do_until (68)
        on left: 48
        on right: 30
    sentencia_funcion (69)
        on left: 49
        on right: 31
    sentencia_lista (70)
        on left: 50 51 52
        on right: 32
    exp_simple (71)
        on left: 53 54 55 56
        on right: 62
    exp (72)
        on left: 57 58
        on right: 16 17 33 36 37 38 40 41 45 47 48 59 60 61 67 68
    exp_no_lista (73)
        on left: 59 60 61 62
        on right: 13 57
    exp_lista (74)
        on left: 63 64 65 66 67 68 69
        on right: 58
    op_monario (75)
        on left: 70 71 72
        on right: 59
    op_binario (76)
        on left: 73 74 75 76 77
        on right: 60
    op_monario_lista (77)
        on left: 78
        on right: 63
    op_binario_lista (78)
        on left: 79 80 81 82 83
        on right: 64
    tipo_var_elem (79)
        on left: 84 85 86
        on right: 9 10 13 14


Estado 0

    0 $accept: • programa $end

    TIPOINT  desplazar e ir al estado 1

    programa  ir al estado 2


Estado 1

    1 programa: TIPOINT • MAIN bloque

    MAIN  desplazar e ir al estado 3


Estado 2

    0 $accept: programa • $end

    $end  desplazar e ir al estado 4


Estado 3

    1 programa: TIPOINT MAIN • bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 6


Estado 4

    0 $accept: programa $end •

    $default  aceptar


Estado 5

    2 bloque: LLAVEIZQ • declar_var_locales declar_funciones sentencias LLAVEDCH PYC

    LOCAL  desplazar e ir al estado 7

    $default  reduce usando la regla 4 (declar_var_locales)

    declar_var_locales  ir al estado 8


Estado 6

    1 programa: TIPOINT MAIN bloque •

    $default  reduce usando la regla 1 (programa)


Estado 7

    3 declar_var_locales: LOCAL • LLAVEIZQ var_locales LLAVEDCH

    LLAVEIZQ  desplazar e ir al estado 9


Estado 8

    2 bloque: LLAVEIZQ declar_var_locales • declar_funciones sentencias LLAVEDCH PYC

    $default  reduce usando la regla 19 (declar_funciones)

    declar_funciones  ir al estado 10


Estado 9

    3 declar_var_locales: LOCAL LLAVEIZQ • var_locales LLAVEDCH

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 14
    TIPOCONST  desplazar e ir al estado 15

    var_locales          ir al estado 16
    cuerpo_declar_var    ir al estado 17
    cuerpo_declar_const  ir al estado 18
    tipo_var_elem        ir al estado 19


Estado 10

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones • sentencias LLAVEDCH PYC

    WHILE     desplazar e ir al estado 20
    DO        desplazar e ir al estado 21
    IF        desplazar e ir al estado 22
    CIN       desplazar e ir al estado 23
    COUT      desplazar e ir al estado 24
    RETURN    desplazar e ir al estado 25
    LLAVEIZQ  desplazar e ir al estado 5
    DOLLAR    desplazar e ir al estado 26
    ID        desplazar e ir al estado 27

    $default  reduce usando la regla 22 (sentencias)

    bloque              ir al estado 28
    sentencias          ir al estado 29
    sentencia           ir al estado 30
    sentencia_asig      ir al estado 31
    sentencia_if        ir al estado 32
    sentencia_while     ir al estado 33
    sentencia_entrada   ir al estado 34
    sentencia_salida    ir al estado 35
    sentencia_return    ir al estado 36
    sentencia_do_until  ir al estado 37
    sentencia_funcion   ir al estado 38
    sentencia_lista     ir al estado 39


Estado 11

   86 tipo_var_elem: TIPOINT •

    $default  reduce usando la regla 86 (tipo_var_elem)


Estado 12

   85 tipo_var_elem: TIPOCHAR •

    $default  reduce usando la regla 85 (tipo_var_elem)


Estado 13

   84 tipo_var_elem: TIPOVAR •

    $default  reduce usando la regla 84 (tipo_var_elem)


Estado 14

   10 cuerpo_declar_var: TIPOLISTA • tipo_var_elem nombres PYC

    TIPOINT   desplazar e ir al estado 11
    TIPOCHAR  desplazar e ir al estado 12
    TIPOVAR   desplazar e ir al estado 13

    tipo_var_elem  ir al estado 40


Estado 15

   13 cuerpo_declar_const: TIPOCONST • tipo_var_elem ID ASING exp_no_lista PYC
   14                    | TIPOCONST • TIPOLISTA tipo_var_elem ID ASING CORIZQ items CORDCH PYC
   15                    | TIPOCONST • TIPOLISTA TIPOCHAR ID ASING CORIZQ CADENA CORDCH PYC

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 41

    tipo_var_elem  ir al estado 42


Estado 16

    3 declar_var_locales: LOCAL LLAVEIZQ var_locales • LLAVEDCH

    LLAVEDCH  desplazar e ir al estado 43


Estado 17

    5 var_locales: cuerpo_declar_var • var_locales
    7            | cuerpo_declar_var •

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 14
    TIPOCONST  desplazar e ir al estado 15

    $default  reduce usando la regla 7 (var_locales)

    var_locales          ir al estado 44
    cuerpo_declar_var    ir al estado 17
    cuerpo_declar_const  ir al estado 18
    tipo_var_elem        ir al estado 19


Estado 18

    6 var_locales: cuerpo_declar_const • var_locales
    8            | cuerpo_declar_const •

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 14
    TIPOCONST  desplazar e ir al estado 15

    $default  reduce usando la regla 8 (var_locales)

    var_locales          ir al estado 45
    cuerpo_declar_var    ir al estado 17
    cuerpo_declar_const  ir al estado 18
    tipo_var_elem        ir al estado 19


Estado 19

    9 cuerpo_declar_var: tipo_var_elem • nombres PYC

    ID  desplazar e ir al estado 46

    nombres  ir al estado 47


Estado 20

   38 sentencia_while: WHILE • PARIZQ exp PARDCH bloque

    PARIZQ  desplazar e ir al estado 48


Estado 21

   48 sentencia_do_until: DO • bloque UNTIL PARIZQ exp PARDCH

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 49


Estado 22

   36 sentencia_if: IF • PARIZQ exp PARDCH bloque
   37             | IF • PARIZQ exp PARDCH bloque ELSE bloque

    PARIZQ  desplazar e ir al estado 50


Estado 23

   39 sentencia_entrada: CIN • SIG datos_entrada

    SIG  desplazar e ir al estado 51


Estado 24

   42 sentencia_salida: COUT • ANT datos_salida

    ANT  desplazar e ir al estado 52


Estado 25

   47 sentencia_return: RETURN • exp

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 64
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 26

   52 sentencia_lista: DOLLAR • ID

    ID  desplazar e ir al estado 69


Estado 27

   33 sentencia_asig: ID • ASING exp
   34               | ID • ASING CORIZQ items CORDCH
   35               | ID • ASING CORIZQ CADENA CORDCH
   49 sentencia_funcion: ID • PARIZQ items PARDCH
   50 sentencia_lista: ID • SIG
   51                | ID • ANT

    PARIZQ  desplazar e ir al estado 70
    ASING   desplazar e ir al estado 71
    SIG     desplazar e ir al estado 72
    ANT     desplazar e ir al estado 73


Estado 28

   23 sentencia: bloque •

    $default  reduce usando la regla 23 (sentencia)


Estado 29

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones sentencias • LLAVEDCH PYC

    LLAVEDCH  desplazar e ir al estado 74


Estado 30

   20 sentencias: sentencia • sentencias PYC
   21           | sentencia • PYC

    WHILE     desplazar e ir al estado 20
    DO        desplazar e ir al estado 21
    IF        desplazar e ir al estado 22
    CIN       desplazar e ir al estado 23
    COUT      desplazar e ir al estado 24
    RETURN    desplazar e ir al estado 25
    LLAVEIZQ  desplazar e ir al estado 5
    PYC       desplazar e ir al estado 75
    DOLLAR    desplazar e ir al estado 26
    ID        desplazar e ir al estado 27

    PYC  [reduce usando la regla 22 (sentencias)]

    bloque              ir al estado 28
    sentencias          ir al estado 76
    sentencia           ir al estado 30
    sentencia_asig      ir al estado 31
    sentencia_if        ir al estado 32
    sentencia_while     ir al estado 33
    sentencia_entrada   ir al estado 34
    sentencia_salida    ir al estado 35
    sentencia_return    ir al estado 36
    sentencia_do_until  ir al estado 37
    sentencia_funcion   ir al estado 38
    sentencia_lista     ir al estado 39


Estado 31

   24 sentencia: sentencia_asig •

    $default  reduce usando la regla 24 (sentencia)


Estado 32

   25 sentencia: sentencia_if •

    $default  reduce usando la regla 25 (sentencia)


Estado 33

   26 sentencia: sentencia_while •

    $default  reduce usando la regla 26 (sentencia)


Estado 34

   27 sentencia: sentencia_entrada •

    $default  reduce usando la regla 27 (sentencia)


Estado 35

   28 sentencia: sentencia_salida •

    $default  reduce usando la regla 28 (sentencia)


Estado 36

   29 sentencia: sentencia_return •

    $default  reduce usando la regla 29 (sentencia)


Estado 37

   30 sentencia: sentencia_do_until •

    $default  reduce usando la regla 30 (sentencia)


Estado 38

   31 sentencia: sentencia_funcion •

    $default  reduce usando la regla 31 (sentencia)


Estado 39

   32 sentencia: sentencia_lista •

    $default  reduce usando la regla 32 (sentencia)


Estado 40

   10 cuerpo_declar_var: TIPOLISTA tipo_var_elem • nombres PYC

    ID  desplazar e ir al estado 46

    nombres  ir al estado 77


Estado 41

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA • tipo_var_elem ID ASING CORIZQ items CORDCH PYC
   15                    | TIPOCONST TIPOLISTA • TIPOCHAR ID ASING CORIZQ CADENA CORDCH PYC

    TIPOINT   desplazar e ir al estado 11
    TIPOCHAR  desplazar e ir al estado 78
    TIPOVAR   desplazar e ir al estado 13

    tipo_var_elem  ir al estado 79


Estado 42

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem • ID ASING exp_no_lista PYC

    ID  desplazar e ir al estado 80


Estado 43

    3 declar_var_locales: LOCAL LLAVEIZQ var_locales LLAVEDCH •

    $default  reduce usando la regla 3 (declar_var_locales)


Estado 44

    5 var_locales: cuerpo_declar_var var_locales •

    $default  reduce usando la regla 5 (var_locales)


Estado 45

    6 var_locales: cuerpo_declar_const var_locales •

    $default  reduce usando la regla 6 (var_locales)


Estado 46

   11 nombres: ID • COMA nombres
   12        | ID •

    COMA  desplazar e ir al estado 81

    $default  reduce usando la regla 12 (nombres)


Estado 47

    9 cuerpo_declar_var: tipo_var_elem nombres • PYC

    PYC  desplazar e ir al estado 82


Estado 48

   38 sentencia_while: WHILE PARIZQ • exp PARDCH bloque

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 83
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 49

   48 sentencia_do_until: DO bloque • UNTIL PARIZQ exp PARDCH

    UNTIL  desplazar e ir al estado 84


Estado 50

   36 sentencia_if: IF PARIZQ • exp PARDCH bloque
   37             | IF PARIZQ • exp PARDCH bloque ELSE bloque

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 85
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 51

   39 sentencia_entrada: CIN SIG • datos_entrada

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    datos_entrada     ir al estado 86
    exp_simple        ir al estado 63
    exp               ir al estado 87
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 52

   42 sentencia_salida: COUT ANT • datos_salida

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    CADENA      desplazar e ir al estado 88
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    datos_salida      ir al estado 89
    dato_salida       ir al estado 90
    exp_simple        ir al estado 63
    exp               ir al estado 91
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 53

   55 exp_simple: VALBOOL •

    $default  reduce usando la regla 55 (exp_simple)


Estado 54

   61 exp_no_lista: PARIZQ • exp PARDCH

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 92
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 55

   70 op_monario: OPEMON •

    $default  reduce usando la regla 70 (op_monario)


Estado 56

   78 op_monario_lista: OPEMONLIST •

    $default  reduce usando la regla 78 (op_monario_lista)


Estado 57

   71 op_monario: PLUS •

    $default  reduce usando la regla 71 (op_monario)


Estado 58

   72 op_monario: MINUS •

    $default  reduce usando la regla 72 (op_monario)


Estado 59

   54 exp_simple: CHAR •

    $default  reduce usando la regla 54 (exp_simple)


Estado 60

   53 exp_simple: NUMERO •

    $default  reduce usando la regla 53 (exp_simple)


Estado 61

   65 exp_lista: ENTERO • PLUS ID
   66          | ENTERO • TIMES ID

    PLUS   desplazar e ir al estado 93
    TIMES  desplazar e ir al estado 94


Estado 62

   56 exp_simple: ID •
   64 exp_lista: ID • op_binario_lista ENTERO
   67          | ID • AT exp
   68          | ID • PLUSPLUS ENTERO AT exp
   69          | ID • TIMESTIMES ID

    OPEBINLIST  desplazar e ir al estado 95
    AT          desplazar e ir al estado 96
    PLUSPLUS    desplazar e ir al estado 97
    MINUSMINUS  desplazar e ir al estado 98
    TIMESTIMES  desplazar e ir al estado 99
    PLUS        desplazar e ir al estado 100
    MINUS       desplazar e ir al estado 101
    TIMES       desplazar e ir al estado 102

    OPEBINLIST  [reduce usando la regla 56 (exp_simple)]
    PLUS        [reduce usando la regla 56 (exp_simple)]
    MINUS       [reduce usando la regla 56 (exp_simple)]
    TIMES       [reduce usando la regla 56 (exp_simple)]
    $default    reduce usando la regla 56 (exp_simple)

    op_binario_lista  ir al estado 103


Estado 63

   62 exp_no_lista: exp_simple •

    $default  reduce usando la regla 62 (exp_no_lista)


Estado 64

   47 sentencia_return: RETURN exp •
   60 exp_no_lista: exp • op_binario exp

    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    $default  reduce usando la regla 47 (sentencia_return)

    op_binario  ir al estado 109


Estado 65

   57 exp: exp_no_lista •

    $default  reduce usando la regla 57 (exp)


Estado 66

   58 exp: exp_lista •

    $default  reduce usando la regla 58 (exp)


Estado 67

   59 exp_no_lista: op_monario • exp

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 110
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 68

   63 exp_lista: op_monario_lista • ID

    ID  desplazar e ir al estado 111


Estado 69

   52 sentencia_lista: DOLLAR ID •

    $default  reduce usando la regla 52 (sentencia_lista)


Estado 70

   49 sentencia_funcion: ID PARIZQ • items PARDCH

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    $default  reduce usando la regla 18 (items)

    items             ir al estado 112
    exp_simple        ir al estado 63
    exp               ir al estado 113
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 71

   33 sentencia_asig: ID ASING • exp
   34               | ID ASING • CORIZQ items CORDCH
   35               | ID ASING • CORIZQ CADENA CORDCH

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    CORIZQ      desplazar e ir al estado 114
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 115
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 72

   50 sentencia_lista: ID SIG •

    $default  reduce usando la regla 50 (sentencia_lista)


Estado 73

   51 sentencia_lista: ID ANT •

    $default  reduce usando la regla 51 (sentencia_lista)


Estado 74

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones sentencias LLAVEDCH • PYC

    PYC  desplazar e ir al estado 116


Estado 75

   21 sentencias: sentencia PYC •

    $default  reduce usando la regla 21 (sentencias)


Estado 76

   20 sentencias: sentencia sentencias • PYC

    PYC  desplazar e ir al estado 117


Estado 77

   10 cuerpo_declar_var: TIPOLISTA tipo_var_elem nombres • PYC

    PYC  desplazar e ir al estado 118


Estado 78

   15 cuerpo_declar_const: TIPOCONST TIPOLISTA TIPOCHAR • ID ASING CORIZQ CADENA CORDCH PYC
   85 tipo_var_elem: TIPOCHAR •

    ID  desplazar e ir al estado 119

    ID  [reduce usando la regla 85 (tipo_var_elem)]


Estado 79

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem • ID ASING CORIZQ items CORDCH PYC

    ID  desplazar e ir al estado 120


Estado 80

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID • ASING exp_no_lista PYC

    ASING  desplazar e ir al estado 121


Estado 81

   11 nombres: ID COMA • nombres

    ID  desplazar e ir al estado 46

    nombres  ir al estado 122


Estado 82

    9 cuerpo_declar_var: tipo_var_elem nombres PYC •

    $default  reduce usando la regla 9 (cuerpo_declar_var)


Estado 83

   38 sentencia_while: WHILE PARIZQ exp • PARDCH bloque
   60 exp_no_lista: exp • op_binario exp

    PARDCH      desplazar e ir al estado 123
    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    op_binario  ir al estado 109


Estado 84

   48 sentencia_do_until: DO bloque UNTIL • PARIZQ exp PARDCH

    PARIZQ  desplazar e ir al estado 124


Estado 85

   36 sentencia_if: IF PARIZQ exp • PARDCH bloque
   37             | IF PARIZQ exp • PARDCH bloque ELSE bloque
   60 exp_no_lista: exp • op_binario exp

    PARDCH      desplazar e ir al estado 125
    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    op_binario  ir al estado 109


Estado 86

   39 sentencia_entrada: CIN SIG datos_entrada •

    $default  reduce usando la regla 39 (sentencia_entrada)


Estado 87

   40 datos_entrada: exp • SIG datos_entrada
   41              | exp •
   60 exp_no_lista: exp • op_binario exp

    OPEBIN      desplazar e ir al estado 104
    SIG         desplazar e ir al estado 126
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    $default  reduce usando la regla 41 (datos_entrada)

    op_binario  ir al estado 109


Estado 88

   46 dato_salida: CADENA •

    $default  reduce usando la regla 46 (dato_salida)


Estado 89

   42 sentencia_salida: COUT ANT datos_salida •

    $default  reduce usando la regla 42 (sentencia_salida)


Estado 90

   43 datos_salida: dato_salida • SIG datos_salida
   44             | dato_salida •

    SIG  desplazar e ir al estado 127

    $default  reduce usando la regla 44 (datos_salida)


Estado 91

   45 dato_salida: exp •
   60 exp_no_lista: exp • op_binario exp

    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    $default  reduce usando la regla 45 (dato_salida)

    op_binario  ir al estado 109


Estado 92

   60 exp_no_lista: exp • op_binario exp
   61             | PARIZQ exp • PARDCH

    PARDCH      desplazar e ir al estado 128
    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    op_binario  ir al estado 109


Estado 93

   65 exp_lista: ENTERO PLUS • ID

    ID  desplazar e ir al estado 129


Estado 94

   66 exp_lista: ENTERO TIMES • ID

    ID  desplazar e ir al estado 130


Estado 95

   79 op_binario_lista: OPEBINLIST •

    $default  reduce usando la regla 79 (op_binario_lista)


Estado 96

   67 exp_lista: ID AT • exp

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 131
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 97

   68 exp_lista: ID PLUSPLUS • ENTERO AT exp

    ENTERO  desplazar e ir al estado 132


Estado 98

   80 op_binario_lista: MINUSMINUS •

    $default  reduce usando la regla 80 (op_binario_lista)


Estado 99

   69 exp_lista: ID TIMESTIMES • ID

    ID  desplazar e ir al estado 133


Estado 100

   81 op_binario_lista: PLUS •

    $default  reduce usando la regla 81 (op_binario_lista)


Estado 101

   82 op_binario_lista: MINUS •

    $default  reduce usando la regla 82 (op_binario_lista)


Estado 102

   83 op_binario_lista: TIMES •

    $default  reduce usando la regla 83 (op_binario_lista)


Estado 103

   64 exp_lista: ID op_binario_lista • ENTERO

    ENTERO  desplazar e ir al estado 134


Estado 104

   77 op_binario: OPEBIN •

    $default  reduce usando la regla 77 (op_binario)


Estado 105

   76 op_binario: OPEBINLIST •

    $default  reduce usando la regla 76 (op_binario)


Estado 106

   73 op_binario: PLUS •

    $default  reduce usando la regla 73 (op_binario)


Estado 107

   74 op_binario: MINUS •

    $default  reduce usando la regla 74 (op_binario)


Estado 108

   75 op_binario: TIMES •

    $default  reduce usando la regla 75 (op_binario)


Estado 109

   60 exp_no_lista: exp op_binario • exp

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 135
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 110

   59 exp_no_lista: op_monario exp •
   60             | exp • op_binario exp

    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    OPEBIN      [reduce usando la regla 59 (exp_no_lista)]
    OPEBINLIST  [reduce usando la regla 59 (exp_no_lista)]
    PLUS        [reduce usando la regla 59 (exp_no_lista)]
    MINUS       [reduce usando la regla 59 (exp_no_lista)]
    TIMES       [reduce usando la regla 59 (exp_no_lista)]
    $default    reduce usando la regla 59 (exp_no_lista)

    op_binario  ir al estado 109


Estado 111

   63 exp_lista: op_monario_lista ID •

    $default  reduce usando la regla 63 (exp_lista)


Estado 112

   49 sentencia_funcion: ID PARIZQ items • PARDCH

    PARDCH  desplazar e ir al estado 136


Estado 113

   16 items: exp • COMA items
   17      | exp •
   60 exp_no_lista: exp • op_binario exp

    COMA        desplazar e ir al estado 137
    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    $default  reduce usando la regla 17 (items)

    op_binario  ir al estado 109


Estado 114

   34 sentencia_asig: ID ASING CORIZQ • items CORDCH
   35               | ID ASING CORIZQ • CADENA CORDCH

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    CADENA      desplazar e ir al estado 138
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    $default  reduce usando la regla 18 (items)

    items             ir al estado 139
    exp_simple        ir al estado 63
    exp               ir al estado 113
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 115

   33 sentencia_asig: ID ASING exp •
   60 exp_no_lista: exp • op_binario exp

    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    $default  reduce usando la regla 33 (sentencia_asig)

    op_binario  ir al estado 109


Estado 116

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones sentencias LLAVEDCH PYC •

    $default  reduce usando la regla 2 (bloque)


Estado 117

   20 sentencias: sentencia sentencias PYC •

    $default  reduce usando la regla 20 (sentencias)


Estado 118

   10 cuerpo_declar_var: TIPOLISTA tipo_var_elem nombres PYC •

    $default  reduce usando la regla 10 (cuerpo_declar_var)


Estado 119

   15 cuerpo_declar_const: TIPOCONST TIPOLISTA TIPOCHAR ID • ASING CORIZQ CADENA CORDCH PYC

    ASING  desplazar e ir al estado 140


Estado 120

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID • ASING CORIZQ items CORDCH PYC

    ASING  desplazar e ir al estado 141


Estado 121

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID ASING • exp_no_lista PYC

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 142
    exp_no_lista      ir al estado 143
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 122

   11 nombres: ID COMA nombres •

    $default  reduce usando la regla 11 (nombres)


Estado 123

   38 sentencia_while: WHILE PARIZQ exp PARDCH • bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 144


Estado 124

   48 sentencia_do_until: DO bloque UNTIL PARIZQ • exp PARDCH

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 145
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 125

   36 sentencia_if: IF PARIZQ exp PARDCH • bloque
   37             | IF PARIZQ exp PARDCH • bloque ELSE bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 146


Estado 126

   40 datos_entrada: exp SIG • datos_entrada

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    datos_entrada     ir al estado 147
    exp_simple        ir al estado 63
    exp               ir al estado 87
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 127

   43 datos_salida: dato_salida SIG • datos_salida

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    CADENA      desplazar e ir al estado 88
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    datos_salida      ir al estado 148
    dato_salida       ir al estado 90
    exp_simple        ir al estado 63
    exp               ir al estado 91
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 128

   61 exp_no_lista: PARIZQ exp PARDCH •

    $default  reduce usando la regla 61 (exp_no_lista)


Estado 129

   65 exp_lista: ENTERO PLUS ID •

    $default  reduce usando la regla 65 (exp_lista)


Estado 130

   66 exp_lista: ENTERO TIMES ID •

    $default  reduce usando la regla 66 (exp_lista)


Estado 131

   60 exp_no_lista: exp • op_binario exp
   67 exp_lista: ID AT exp •

    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    OPEBIN      [reduce usando la regla 67 (exp_lista)]
    OPEBINLIST  [reduce usando la regla 67 (exp_lista)]
    PLUS        [reduce usando la regla 67 (exp_lista)]
    MINUS       [reduce usando la regla 67 (exp_lista)]
    TIMES       [reduce usando la regla 67 (exp_lista)]
    $default    reduce usando la regla 67 (exp_lista)

    op_binario  ir al estado 109


Estado 132

   68 exp_lista: ID PLUSPLUS ENTERO • AT exp

    AT  desplazar e ir al estado 149


Estado 133

   69 exp_lista: ID TIMESTIMES ID •

    $default  reduce usando la regla 69 (exp_lista)


Estado 134

   64 exp_lista: ID op_binario_lista ENTERO •

    $default  reduce usando la regla 64 (exp_lista)


Estado 135

   60 exp_no_lista: exp • op_binario exp
   60             | exp op_binario exp •

    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    OPEBIN      [reduce usando la regla 60 (exp_no_lista)]
    OPEBINLIST  [reduce usando la regla 60 (exp_no_lista)]
    PLUS        [reduce usando la regla 60 (exp_no_lista)]
    MINUS       [reduce usando la regla 60 (exp_no_lista)]
    TIMES       [reduce usando la regla 60 (exp_no_lista)]
    $default    reduce usando la regla 60 (exp_no_lista)

    op_binario  ir al estado 109


Estado 136

   49 sentencia_funcion: ID PARIZQ items PARDCH •

    $default  reduce usando la regla 49 (sentencia_funcion)


Estado 137

   16 items: exp COMA • items

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    $default  reduce usando la regla 18 (items)

    items             ir al estado 150
    exp_simple        ir al estado 63
    exp               ir al estado 113
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 138

   35 sentencia_asig: ID ASING CORIZQ CADENA • CORDCH

    CORDCH  desplazar e ir al estado 151


Estado 139

   34 sentencia_asig: ID ASING CORIZQ items • CORDCH

    CORDCH  desplazar e ir al estado 152


Estado 140

   15 cuerpo_declar_const: TIPOCONST TIPOLISTA TIPOCHAR ID ASING • CORIZQ CADENA CORDCH PYC

    CORIZQ  desplazar e ir al estado 153


Estado 141

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID ASING • CORIZQ items CORDCH PYC

    CORIZQ  desplazar e ir al estado 154


Estado 142

   60 exp_no_lista: exp • op_binario exp

    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    op_binario  ir al estado 109


Estado 143

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID ASING exp_no_lista • PYC
   57 exp: exp_no_lista •

    PYC  desplazar e ir al estado 155

    $default  reduce usando la regla 57 (exp)


Estado 144

   38 sentencia_while: WHILE PARIZQ exp PARDCH bloque •

    $default  reduce usando la regla 38 (sentencia_while)


Estado 145

   48 sentencia_do_until: DO bloque UNTIL PARIZQ exp • PARDCH
   60 exp_no_lista: exp • op_binario exp

    PARDCH      desplazar e ir al estado 156
    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    op_binario  ir al estado 109


Estado 146

   36 sentencia_if: IF PARIZQ exp PARDCH bloque •
   37             | IF PARIZQ exp PARDCH bloque • ELSE bloque

    ELSE  desplazar e ir al estado 157

    $default  reduce usando la regla 36 (sentencia_if)


Estado 147

   40 datos_entrada: exp SIG datos_entrada •

    $default  reduce usando la regla 40 (datos_entrada)


Estado 148

   43 datos_salida: dato_salida SIG datos_salida •

    $default  reduce usando la regla 43 (datos_salida)


Estado 149

   68 exp_lista: ID PLUSPLUS ENTERO AT • exp

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    exp_simple        ir al estado 63
    exp               ir al estado 158
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 150

   16 items: exp COMA items •

    $default  reduce usando la regla 16 (items)


Estado 151

   35 sentencia_asig: ID ASING CORIZQ CADENA CORDCH •

    $default  reduce usando la regla 35 (sentencia_asig)


Estado 152

   34 sentencia_asig: ID ASING CORIZQ items CORDCH •

    $default  reduce usando la regla 34 (sentencia_asig)


Estado 153

   15 cuerpo_declar_const: TIPOCONST TIPOLISTA TIPOCHAR ID ASING CORIZQ • CADENA CORDCH PYC

    CADENA  desplazar e ir al estado 159


Estado 154

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID ASING CORIZQ • items CORDCH PYC

    VALBOOL     desplazar e ir al estado 53
    PARIZQ      desplazar e ir al estado 54
    OPEMON      desplazar e ir al estado 55
    OPEMONLIST  desplazar e ir al estado 56
    PLUS        desplazar e ir al estado 57
    MINUS       desplazar e ir al estado 58
    CHAR        desplazar e ir al estado 59
    NUMERO      desplazar e ir al estado 60
    ENTERO      desplazar e ir al estado 61
    ID          desplazar e ir al estado 62

    $default  reduce usando la regla 18 (items)

    items             ir al estado 160
    exp_simple        ir al estado 63
    exp               ir al estado 113
    exp_no_lista      ir al estado 65
    exp_lista         ir al estado 66
    op_monario        ir al estado 67
    op_monario_lista  ir al estado 68


Estado 155

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID ASING exp_no_lista PYC •

    $default  reduce usando la regla 13 (cuerpo_declar_const)


Estado 156

   48 sentencia_do_until: DO bloque UNTIL PARIZQ exp PARDCH •

    $default  reduce usando la regla 48 (sentencia_do_until)


Estado 157

   37 sentencia_if: IF PARIZQ exp PARDCH bloque ELSE • bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 161


Estado 158

   60 exp_no_lista: exp • op_binario exp
   68 exp_lista: ID PLUSPLUS ENTERO AT exp •

    OPEBIN      desplazar e ir al estado 104
    OPEBINLIST  desplazar e ir al estado 105
    PLUS        desplazar e ir al estado 106
    MINUS       desplazar e ir al estado 107
    TIMES       desplazar e ir al estado 108

    OPEBIN      [reduce usando la regla 68 (exp_lista)]
    OPEBINLIST  [reduce usando la regla 68 (exp_lista)]
    PLUS        [reduce usando la regla 68 (exp_lista)]
    MINUS       [reduce usando la regla 68 (exp_lista)]
    TIMES       [reduce usando la regla 68 (exp_lista)]
    $default    reduce usando la regla 68 (exp_lista)

    op_binario  ir al estado 109


Estado 159

   15 cuerpo_declar_const: TIPOCONST TIPOLISTA TIPOCHAR ID ASING CORIZQ CADENA • CORDCH PYC

    CORDCH  desplazar e ir al estado 162


Estado 160

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID ASING CORIZQ items • CORDCH PYC

    CORDCH  desplazar e ir al estado 163


Estado 161

   37 sentencia_if: IF PARIZQ exp PARDCH bloque ELSE bloque •

    $default  reduce usando la regla 37 (sentencia_if)


Estado 162

   15 cuerpo_declar_const: TIPOCONST TIPOLISTA TIPOCHAR ID ASING CORIZQ CADENA CORDCH • PYC

    PYC  desplazar e ir al estado 164


Estado 163

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID ASING CORIZQ items CORDCH • PYC

    PYC  desplazar e ir al estado 165


Estado 164

   15 cuerpo_declar_const: TIPOCONST TIPOLISTA TIPOCHAR ID ASING CORIZQ CADENA CORDCH PYC •

    $default  reduce usando la regla 15 (cuerpo_declar_const)


Estado 165

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID ASING CORIZQ items CORDCH PYC •

    $default  reduce usando la regla 14 (cuerpo_declar_const)
