Gramática

    0 $accept: programa $end

    1 programa: TIPOINT MAIN bloque

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones sentencias LLAVEDCH

    3 declar_var_locales: LOCAL LLAVEIZQ var_locales LLAVEDCH
    4                   | ε

    5 var_locales: var_locales cuerpo_declar_var PYC
    6            | var_locales cuerpo_declar_const PYC
    7            | cuerpo_declar_var PYC
    8            | cuerpo_declar_const PYC

    9 cuerpo_declar_var: tipo_var_elem nombres
   10                  | TIPOLISTA tipo_var_elem nombres

   11 nombres: nombres COMA ID
   12        | ID

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID ASING exp_simple
   14                    | TIPOCONST TIPOLISTA tipo_var_elem ID ASING CORIZQ asig_const_lista

   15 asig_const_lista: items CORDCH
   16                 | CADENA CORDCH

   17 items: items COMA exp_simple
   18      | exp_simple
   19      | ε

   20 declar_funciones: declar_funciones declar_funcion
   21                 | ε

   22 declar_funcion: cabec_funcion bloque

   23 cabec_funcion: tipo_var ID PARIZQ parametros PARDCH

   24 parametros: parametros COMA parametro
   25           | parametro
   26           | ε

   27 parametro: tipo_var ID

   28 sentencias: sentencias bloque PYC
   29           | sentencias ID ASING sentencia_asig PYC
   30           | sentencias IF sentencia_if PYC
   31           | sentencias WHILE sentencia_while PYC
   32           | sentencias CIN sentencia_entrada PYC
   33           | sentencias COUT sentencia_salida PYC
   34           | sentencias RETURN sentencia_return PYC
   35           | sentencias DO sentencia_do_until PYC
   36           | sentencias ID PARIZQ sentencia_funcion PARDCH PYC
   37           | sentencias sentencia_lista PYC
   38           | ε

   39 sentencia_asig: exp
   40               | CORIZQ items CORDCH
   41               | CORIZQ CADENA CORDCH

   42 sentencia_if: PARIZQ exp PARDCH bloque
   43             | PARIZQ exp PARDCH bloque ELSE bloque

   44 sentencia_while: PARIZQ exp PARDCH bloque

   45 sentencia_entrada: SIG datos_entrada

   46 datos_entrada: datos_entrada SIG exp
   47              | exp

   48 sentencia_salida: ANT datos_salida

   49 datos_salida: datos_salida SIG dato_salida
   50             | dato_salida

   51 dato_salida: exp
   52            | CADENA

   53 sentencia_return: exp

   54 sentencia_do_until: bloque UNTIL PARIZQ exp PARDCH

   55 sentencia_funcion: items

   56 sentencia_lista: ID SIG
   57                | ID ANT
   58                | DOLLAR ID

   59 exp: exp PLUS termino
   60    | exp MINUS termino
   61    | exp TIMES termino
   62    | exp OPEBIN termino
   63    | exp OPEBINLIST termino
   64    | termino
   65    | exp ID exp_lista_ID
   66    | exp DOLLAR ID
   67    | exp OPEMONLIST ID
   68    | exp exp_simple aux ID

   69 exp_lista_ID: SIG
   70             | ANT
   71             | AT num op_ternario
   72             | MINUSMINUS num
   73             | TIMESTIMES ID
   74             | PLUS exp_simple
   75             | MINUS exp_simple
   76             | TIMES exp_simple
   77             | OPEBINLIST exp_simple

   78 op_ternario: PLUSPLUS exp_simple
   79            | ε

   80 aux: PLUS
   81    | TIMES

   82 termino: exp_simple
   83        | OPEMON exp_simple

   84 exp_simple: op_signo num
   85           | CHAR
   86           | VALBOOL
   87           | LLAVEIZQ ID LLAVEDCH

   88 num: NUMERO
   89    | ENTERO

   90 op_signo: PLUS
   91         | MINUS

   92 tipo_var_elem: TIPOVAR
   93              | TIPOCHAR
   94              | TIPOINT

   95 tipo_var: tipo_var_elem
   96         | TIPOLISTA tipo_var_elem


Terminales con las reglas donde aparecen

    $end (0) 0
    error (256)
    WHILE (258) 31
    DO (259) 35
    UNTIL (260) 54
    IF (261) 30
    ELSE (262) 43
    CIN (263) 32
    COUT (264) 33
    MAIN (265) 1
    RETURN (266) 34
    LOCAL (267) 3
    TIPOINT (268) 1 94
    TIPOCHAR (269) 93
    TIPOVAR (270) 92
    TIPOLISTA (271) 10 14 96
    TIPOCONST (272) 13 14
    VALBOOL (273) 86
    PARIZQ (274) 23 36 42 43 44 54
    PARDCH (275) 23 36 42 43 44 54
    LLAVEIZQ (276) 2 3 87
    LLAVEDCH (277) 2 3 87
    CORIZQ (278) 14 40 41
    CORDCH (279) 15 16 40 41
    PYC (280) 5 6 7 8 28 29 30 31 32 33 34 35 36 37
    COMA (281) 11 17 24
    ASING (282) 13 14 29
    OPEMON (283) 83
    OPEBIN (284) 62
    SIG (285) 45 46 49 56 69
    ANT (286) 48 57 70
    DOLLAR (287) 58 66
    OPEMONLIST (288) 67
    OPEBINLIST (289) 63 77
    AT (290) 71
    PLUSPLUS (291) 78
    MINUSMINUS (292) 72
    TIMESTIMES (293) 73
    PLUS (294) 59 74 80 90
    MINUS (295) 60 75 91
    TIMES (296) 61 76 81
    CHAR (297) 85
    CADENA (298) 16 41 52
    NUMERO (299) 88
    ENTERO (300) 89
    ID (301) 11 12 13 14 23 27 29 36 56 57 58 65 66 67 68 73 87


No terminales con las reglas donde aparecen

    $accept (47)
        on left: 0
    programa (48)
        on left: 1
        on right: 0
    bloque (49)
        on left: 2
        on right: 1 22 28 42 43 44 54
    declar_var_locales (50)
        on left: 3 4
        on right: 2
    var_locales (51)
        on left: 5 6 7 8
        on right: 3 5 6
    cuerpo_declar_var (52)
        on left: 9 10
        on right: 5 7
    nombres (53)
        on left: 11 12
        on right: 9 10 11
    cuerpo_declar_const (54)
        on left: 13 14
        on right: 6 8
    asig_const_lista (55)
        on left: 15 16
        on right: 14
    items (56)
        on left: 17 18 19
        on right: 15 17 40 55
    declar_funciones (57)
        on left: 20 21
        on right: 2 20
    declar_funcion (58)
        on left: 22
        on right: 20
    cabec_funcion (59)
        on left: 23
        on right: 22
    parametros (60)
        on left: 24 25 26
        on right: 23 24
    parametro (61)
        on left: 27
        on right: 24 25
    sentencias (62)
        on left: 28 29 30 31 32 33 34 35 36 37 38
        on right: 2 28 29 30 31 32 33 34 35 36 37
    sentencia_asig (63)
        on left: 39 40 41
        on right: 29
    sentencia_if (64)
        on left: 42 43
        on right: 30
    sentencia_while (65)
        on left: 44
        on right: 31
    sentencia_entrada (66)
        on left: 45
        on right: 32
    datos_entrada (67)
        on left: 46 47
        on right: 45 46
    sentencia_salida (68)
        on left: 48
        on right: 33
    datos_salida (69)
        on left: 49 50
        on right: 48 49
    dato_salida (70)
        on left: 51 52
        on right: 49 50
    sentencia_return (71)
        on left: 53
        on right: 34
    sentencia_do_until (72)
        on left: 54
        on right: 35
    sentencia_funcion (73)
        on left: 55
        on right: 36
    sentencia_lista (74)
        on left: 56 57 58
        on right: 37
    exp (75)
        on left: 59 60 61 62 63 64 65 66 67 68
        on right: 39 42 43 44 46 47 51 53 54 59 60 61 62 63 65 66 67 68
    exp_lista_ID (76)
        on left: 69 70 71 72 73 74 75 76 77
        on right: 65
    op_ternario (77)
        on left: 78 79
        on right: 71
    aux (78)
        on left: 80 81
        on right: 68
    termino (79)
        on left: 82 83
        on right: 59 60 61 62 63 64
    exp_simple (80)
        on left: 84 85 86 87
        on right: 13 17 18 68 74 75 76 77 78 82 83
    num (81)
        on left: 88 89
        on right: 71 72 84
    op_signo (82)
        on left: 90 91
        on right: 84
    tipo_var_elem (83)
        on left: 92 93 94
        on right: 9 10 13 14 95 96
    tipo_var (84)
        on left: 95 96
        on right: 23 27


Estado 0

    0 $accept: • programa $end

    TIPOINT  desplazar e ir al estado 1

    programa  ir al estado 2


Estado 1

    1 programa: TIPOINT • MAIN bloque

    MAIN  desplazar e ir al estado 3


Estado 2

    0 $accept: programa • $end

    $end  desplazar e ir al estado 4


Estado 3

    1 programa: TIPOINT MAIN • bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 6


Estado 4

    0 $accept: programa $end •

    $default  aceptar


Estado 5

    2 bloque: LLAVEIZQ • declar_var_locales declar_funciones sentencias LLAVEDCH

    LOCAL  desplazar e ir al estado 7

    $default  reduce usando la regla 4 (declar_var_locales)

    declar_var_locales  ir al estado 8


Estado 6

    1 programa: TIPOINT MAIN bloque •

    $default  reduce usando la regla 1 (programa)


Estado 7

    3 declar_var_locales: LOCAL • LLAVEIZQ var_locales LLAVEDCH

    LLAVEIZQ  desplazar e ir al estado 9


Estado 8

    2 bloque: LLAVEIZQ declar_var_locales • declar_funciones sentencias LLAVEDCH

    $default  reduce usando la regla 21 (declar_funciones)

    declar_funciones  ir al estado 10


Estado 9

    3 declar_var_locales: LOCAL LLAVEIZQ • var_locales LLAVEDCH

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 14
    TIPOCONST  desplazar e ir al estado 15

    var_locales          ir al estado 16
    cuerpo_declar_var    ir al estado 17
    cuerpo_declar_const  ir al estado 18
    tipo_var_elem        ir al estado 19


Estado 10

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones • sentencias LLAVEDCH
   20 declar_funciones: declar_funciones • declar_funcion

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 20

    $default  reduce usando la regla 38 (sentencias)

    declar_funcion  ir al estado 21
    cabec_funcion   ir al estado 22
    sentencias      ir al estado 23
    tipo_var_elem   ir al estado 24
    tipo_var        ir al estado 25


Estado 11

   94 tipo_var_elem: TIPOINT •

    $default  reduce usando la regla 94 (tipo_var_elem)


Estado 12

   93 tipo_var_elem: TIPOCHAR •

    $default  reduce usando la regla 93 (tipo_var_elem)


Estado 13

   92 tipo_var_elem: TIPOVAR •

    $default  reduce usando la regla 92 (tipo_var_elem)


Estado 14

   10 cuerpo_declar_var: TIPOLISTA • tipo_var_elem nombres

    TIPOINT   desplazar e ir al estado 11
    TIPOCHAR  desplazar e ir al estado 12
    TIPOVAR   desplazar e ir al estado 13

    tipo_var_elem  ir al estado 26


Estado 15

   13 cuerpo_declar_const: TIPOCONST • tipo_var_elem ID ASING exp_simple
   14                    | TIPOCONST • TIPOLISTA tipo_var_elem ID ASING CORIZQ asig_const_lista

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 27

    tipo_var_elem  ir al estado 28


Estado 16

    3 declar_var_locales: LOCAL LLAVEIZQ var_locales • LLAVEDCH
    5 var_locales: var_locales • cuerpo_declar_var PYC
    6            | var_locales • cuerpo_declar_const PYC

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 14
    TIPOCONST  desplazar e ir al estado 15
    LLAVEDCH   desplazar e ir al estado 29

    cuerpo_declar_var    ir al estado 30
    cuerpo_declar_const  ir al estado 31
    tipo_var_elem        ir al estado 19


Estado 17

    7 var_locales: cuerpo_declar_var • PYC

    PYC  desplazar e ir al estado 32


Estado 18

    8 var_locales: cuerpo_declar_const • PYC

    PYC  desplazar e ir al estado 33


Estado 19

    9 cuerpo_declar_var: tipo_var_elem • nombres

    ID  desplazar e ir al estado 34

    nombres  ir al estado 35


Estado 20

   96 tipo_var: TIPOLISTA • tipo_var_elem

    TIPOINT   desplazar e ir al estado 11
    TIPOCHAR  desplazar e ir al estado 12
    TIPOVAR   desplazar e ir al estado 13

    tipo_var_elem  ir al estado 36


Estado 21

   20 declar_funciones: declar_funciones declar_funcion •

    $default  reduce usando la regla 20 (declar_funciones)


Estado 22

   22 declar_funcion: cabec_funcion • bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 37


Estado 23

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones sentencias • LLAVEDCH
   28 sentencias: sentencias • bloque PYC
   29           | sentencias • ID ASING sentencia_asig PYC
   30           | sentencias • IF sentencia_if PYC
   31           | sentencias • WHILE sentencia_while PYC
   32           | sentencias • CIN sentencia_entrada PYC
   33           | sentencias • COUT sentencia_salida PYC
   34           | sentencias • RETURN sentencia_return PYC
   35           | sentencias • DO sentencia_do_until PYC
   36           | sentencias • ID PARIZQ sentencia_funcion PARDCH PYC
   37           | sentencias • sentencia_lista PYC

    WHILE     desplazar e ir al estado 38
    DO        desplazar e ir al estado 39
    IF        desplazar e ir al estado 40
    CIN       desplazar e ir al estado 41
    COUT      desplazar e ir al estado 42
    RETURN    desplazar e ir al estado 43
    LLAVEIZQ  desplazar e ir al estado 5
    LLAVEDCH  desplazar e ir al estado 44
    DOLLAR    desplazar e ir al estado 45
    ID        desplazar e ir al estado 46

    bloque           ir al estado 47
    sentencia_lista  ir al estado 48


Estado 24

   95 tipo_var: tipo_var_elem •

    $default  reduce usando la regla 95 (tipo_var)


Estado 25

   23 cabec_funcion: tipo_var • ID PARIZQ parametros PARDCH

    ID  desplazar e ir al estado 49


Estado 26

   10 cuerpo_declar_var: TIPOLISTA tipo_var_elem • nombres

    ID  desplazar e ir al estado 34

    nombres  ir al estado 50


Estado 27

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA • tipo_var_elem ID ASING CORIZQ asig_const_lista

    TIPOINT   desplazar e ir al estado 11
    TIPOCHAR  desplazar e ir al estado 12
    TIPOVAR   desplazar e ir al estado 13

    tipo_var_elem  ir al estado 51


Estado 28

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem • ID ASING exp_simple

    ID  desplazar e ir al estado 52


Estado 29

    3 declar_var_locales: LOCAL LLAVEIZQ var_locales LLAVEDCH •

    $default  reduce usando la regla 3 (declar_var_locales)


Estado 30

    5 var_locales: var_locales cuerpo_declar_var • PYC

    PYC  desplazar e ir al estado 53


Estado 31

    6 var_locales: var_locales cuerpo_declar_const • PYC

    PYC  desplazar e ir al estado 54


Estado 32

    7 var_locales: cuerpo_declar_var PYC •

    $default  reduce usando la regla 7 (var_locales)


Estado 33

    8 var_locales: cuerpo_declar_const PYC •

    $default  reduce usando la regla 8 (var_locales)


Estado 34

   12 nombres: ID •

    $default  reduce usando la regla 12 (nombres)


Estado 35

    9 cuerpo_declar_var: tipo_var_elem nombres •
   11 nombres: nombres • COMA ID

    COMA  desplazar e ir al estado 55

    $default  reduce usando la regla 9 (cuerpo_declar_var)


Estado 36

   96 tipo_var: TIPOLISTA tipo_var_elem •

    $default  reduce usando la regla 96 (tipo_var)


Estado 37

   22 declar_funcion: cabec_funcion bloque •

    $default  reduce usando la regla 22 (declar_funcion)


Estado 38

   31 sentencias: sentencias WHILE • sentencia_while PYC

    PARIZQ  desplazar e ir al estado 56

    sentencia_while  ir al estado 57


Estado 39

   35 sentencias: sentencias DO • sentencia_do_until PYC

    LLAVEIZQ  desplazar e ir al estado 5

    bloque              ir al estado 58
    sentencia_do_until  ir al estado 59


Estado 40

   30 sentencias: sentencias IF • sentencia_if PYC

    PARIZQ  desplazar e ir al estado 60

    sentencia_if  ir al estado 61


Estado 41

   32 sentencias: sentencias CIN • sentencia_entrada PYC

    SIG  desplazar e ir al estado 62

    sentencia_entrada  ir al estado 63


Estado 42

   33 sentencias: sentencias COUT • sentencia_salida PYC

    ANT  desplazar e ir al estado 64

    sentencia_salida  ir al estado 65


Estado 43

   34 sentencias: sentencias RETURN • sentencia_return PYC

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    sentencia_return  ir al estado 72
    exp               ir al estado 73
    termino           ir al estado 74
    exp_simple        ir al estado 75
    op_signo          ir al estado 76


Estado 44

    2 bloque: LLAVEIZQ declar_var_locales declar_funciones sentencias LLAVEDCH •

    $default  reduce usando la regla 2 (bloque)


Estado 45

   58 sentencia_lista: DOLLAR • ID

    ID  desplazar e ir al estado 77


Estado 46

   29 sentencias: sentencias ID • ASING sentencia_asig PYC
   36           | sentencias ID • PARIZQ sentencia_funcion PARDCH PYC
   56 sentencia_lista: ID • SIG
   57                | ID • ANT

    PARIZQ  desplazar e ir al estado 78
    ASING   desplazar e ir al estado 79
    SIG     desplazar e ir al estado 80
    ANT     desplazar e ir al estado 81


Estado 47

   28 sentencias: sentencias bloque • PYC

    PYC  desplazar e ir al estado 82


Estado 48

   37 sentencias: sentencias sentencia_lista • PYC

    PYC  desplazar e ir al estado 83


Estado 49

   23 cabec_funcion: tipo_var ID • PARIZQ parametros PARDCH

    PARIZQ  desplazar e ir al estado 84


Estado 50

   10 cuerpo_declar_var: TIPOLISTA tipo_var_elem nombres •
   11 nombres: nombres • COMA ID

    COMA  desplazar e ir al estado 55

    $default  reduce usando la regla 10 (cuerpo_declar_var)


Estado 51

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem • ID ASING CORIZQ asig_const_lista

    ID  desplazar e ir al estado 85


Estado 52

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID • ASING exp_simple

    ASING  desplazar e ir al estado 86


Estado 53

    5 var_locales: var_locales cuerpo_declar_var PYC •

    $default  reduce usando la regla 5 (var_locales)


Estado 54

    6 var_locales: var_locales cuerpo_declar_const PYC •

    $default  reduce usando la regla 6 (var_locales)


Estado 55

   11 nombres: nombres COMA • ID

    ID  desplazar e ir al estado 87


Estado 56

   44 sentencia_while: PARIZQ • exp PARDCH bloque

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp         ir al estado 88
    termino     ir al estado 74
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 57

   31 sentencias: sentencias WHILE sentencia_while • PYC

    PYC  desplazar e ir al estado 89


Estado 58

   54 sentencia_do_until: bloque • UNTIL PARIZQ exp PARDCH

    UNTIL  desplazar e ir al estado 90


Estado 59

   35 sentencias: sentencias DO sentencia_do_until • PYC

    PYC  desplazar e ir al estado 91


Estado 60

   42 sentencia_if: PARIZQ • exp PARDCH bloque
   43             | PARIZQ • exp PARDCH bloque ELSE bloque

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp         ir al estado 92
    termino     ir al estado 74
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 61

   30 sentencias: sentencias IF sentencia_if • PYC

    PYC  desplazar e ir al estado 93


Estado 62

   45 sentencia_entrada: SIG • datos_entrada

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    datos_entrada  ir al estado 94
    exp            ir al estado 95
    termino        ir al estado 74
    exp_simple     ir al estado 75
    op_signo       ir al estado 76


Estado 63

   32 sentencias: sentencias CIN sentencia_entrada • PYC

    PYC  desplazar e ir al estado 96


Estado 64

   48 sentencia_salida: ANT • datos_salida

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71
    CADENA    desplazar e ir al estado 97

    datos_salida  ir al estado 98
    dato_salida   ir al estado 99
    exp           ir al estado 100
    termino       ir al estado 74
    exp_simple    ir al estado 75
    op_signo      ir al estado 76


Estado 65

   33 sentencias: sentencias COUT sentencia_salida • PYC

    PYC  desplazar e ir al estado 101


Estado 66

   86 exp_simple: VALBOOL •

    $default  reduce usando la regla 86 (exp_simple)


Estado 67

   87 exp_simple: LLAVEIZQ • ID LLAVEDCH

    ID  desplazar e ir al estado 102


Estado 68

   83 termino: OPEMON • exp_simple

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp_simple  ir al estado 103
    op_signo    ir al estado 76


Estado 69

   90 op_signo: PLUS •

    $default  reduce usando la regla 90 (op_signo)


Estado 70

   91 op_signo: MINUS •

    $default  reduce usando la regla 91 (op_signo)


Estado 71

   85 exp_simple: CHAR •

    $default  reduce usando la regla 85 (exp_simple)


Estado 72

   34 sentencias: sentencias RETURN sentencia_return • PYC

    PYC  desplazar e ir al estado 104


Estado 73

   53 sentencia_return: exp •
   59 exp: exp • PLUS termino
   60    | exp • MINUS termino
   61    | exp • TIMES termino
   62    | exp • OPEBIN termino
   63    | exp • OPEBINLIST termino
   65    | exp • ID exp_lista_ID
   66    | exp • DOLLAR ID
   67    | exp • OPEMONLIST ID
   68    | exp • exp_simple aux ID

    VALBOOL     desplazar e ir al estado 66
    LLAVEIZQ    desplazar e ir al estado 67
    OPEBIN      desplazar e ir al estado 105
    DOLLAR      desplazar e ir al estado 106
    OPEMONLIST  desplazar e ir al estado 107
    OPEBINLIST  desplazar e ir al estado 108
    PLUS        desplazar e ir al estado 109
    MINUS       desplazar e ir al estado 110
    TIMES       desplazar e ir al estado 111
    CHAR        desplazar e ir al estado 71
    ID          desplazar e ir al estado 112

    $default  reduce usando la regla 53 (sentencia_return)

    exp_simple  ir al estado 113
    op_signo    ir al estado 76


Estado 74

   64 exp: termino •

    $default  reduce usando la regla 64 (exp)


Estado 75

   82 termino: exp_simple •

    $default  reduce usando la regla 82 (termino)


Estado 76

   84 exp_simple: op_signo • num

    NUMERO  desplazar e ir al estado 114
    ENTERO  desplazar e ir al estado 115

    num  ir al estado 116


Estado 77

   58 sentencia_lista: DOLLAR ID •

    $default  reduce usando la regla 58 (sentencia_lista)


Estado 78

   36 sentencias: sentencias ID PARIZQ • sentencia_funcion PARDCH PYC

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    $default  reduce usando la regla 19 (items)

    items              ir al estado 117
    sentencia_funcion  ir al estado 118
    exp_simple         ir al estado 119
    op_signo           ir al estado 76


Estado 79

   29 sentencias: sentencias ID ASING • sentencia_asig PYC

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    CORIZQ    desplazar e ir al estado 120
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    sentencia_asig  ir al estado 121
    exp             ir al estado 122
    termino         ir al estado 74
    exp_simple      ir al estado 75
    op_signo        ir al estado 76


Estado 80

   56 sentencia_lista: ID SIG •

    $default  reduce usando la regla 56 (sentencia_lista)


Estado 81

   57 sentencia_lista: ID ANT •

    $default  reduce usando la regla 57 (sentencia_lista)


Estado 82

   28 sentencias: sentencias bloque PYC •

    $default  reduce usando la regla 28 (sentencias)


Estado 83

   37 sentencias: sentencias sentencia_lista PYC •

    $default  reduce usando la regla 37 (sentencias)


Estado 84

   23 cabec_funcion: tipo_var ID PARIZQ • parametros PARDCH

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 20

    $default  reduce usando la regla 26 (parametros)

    parametros     ir al estado 123
    parametro      ir al estado 124
    tipo_var_elem  ir al estado 24
    tipo_var       ir al estado 125


Estado 85

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID • ASING CORIZQ asig_const_lista

    ASING  desplazar e ir al estado 126


Estado 86

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID ASING • exp_simple

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp_simple  ir al estado 127
    op_signo    ir al estado 76


Estado 87

   11 nombres: nombres COMA ID •

    $default  reduce usando la regla 11 (nombres)


Estado 88

   44 sentencia_while: PARIZQ exp • PARDCH bloque
   59 exp: exp • PLUS termino
   60    | exp • MINUS termino
   61    | exp • TIMES termino
   62    | exp • OPEBIN termino
   63    | exp • OPEBINLIST termino
   65    | exp • ID exp_lista_ID
   66    | exp • DOLLAR ID
   67    | exp • OPEMONLIST ID
   68    | exp • exp_simple aux ID

    VALBOOL     desplazar e ir al estado 66
    PARDCH      desplazar e ir al estado 128
    LLAVEIZQ    desplazar e ir al estado 67
    OPEBIN      desplazar e ir al estado 105
    DOLLAR      desplazar e ir al estado 106
    OPEMONLIST  desplazar e ir al estado 107
    OPEBINLIST  desplazar e ir al estado 108
    PLUS        desplazar e ir al estado 109
    MINUS       desplazar e ir al estado 110
    TIMES       desplazar e ir al estado 111
    CHAR        desplazar e ir al estado 71
    ID          desplazar e ir al estado 112

    exp_simple  ir al estado 113
    op_signo    ir al estado 76


Estado 89

   31 sentencias: sentencias WHILE sentencia_while PYC •

    $default  reduce usando la regla 31 (sentencias)


Estado 90

   54 sentencia_do_until: bloque UNTIL • PARIZQ exp PARDCH

    PARIZQ  desplazar e ir al estado 129


Estado 91

   35 sentencias: sentencias DO sentencia_do_until PYC •

    $default  reduce usando la regla 35 (sentencias)


Estado 92

   42 sentencia_if: PARIZQ exp • PARDCH bloque
   43             | PARIZQ exp • PARDCH bloque ELSE bloque
   59 exp: exp • PLUS termino
   60    | exp • MINUS termino
   61    | exp • TIMES termino
   62    | exp • OPEBIN termino
   63    | exp • OPEBINLIST termino
   65    | exp • ID exp_lista_ID
   66    | exp • DOLLAR ID
   67    | exp • OPEMONLIST ID
   68    | exp • exp_simple aux ID

    VALBOOL     desplazar e ir al estado 66
    PARDCH      desplazar e ir al estado 130
    LLAVEIZQ    desplazar e ir al estado 67
    OPEBIN      desplazar e ir al estado 105
    DOLLAR      desplazar e ir al estado 106
    OPEMONLIST  desplazar e ir al estado 107
    OPEBINLIST  desplazar e ir al estado 108
    PLUS        desplazar e ir al estado 109
    MINUS       desplazar e ir al estado 110
    TIMES       desplazar e ir al estado 111
    CHAR        desplazar e ir al estado 71
    ID          desplazar e ir al estado 112

    exp_simple  ir al estado 113
    op_signo    ir al estado 76


Estado 93

   30 sentencias: sentencias IF sentencia_if PYC •

    $default  reduce usando la regla 30 (sentencias)


Estado 94

   45 sentencia_entrada: SIG datos_entrada •
   46 datos_entrada: datos_entrada • SIG exp

    SIG  desplazar e ir al estado 131

    $default  reduce usando la regla 45 (sentencia_entrada)


Estado 95

   47 datos_entrada: exp •
   59 exp: exp • PLUS termino
   60    | exp • MINUS termino
   61    | exp • TIMES termino
   62    | exp • OPEBIN termino
   63    | exp • OPEBINLIST termino
   65    | exp • ID exp_lista_ID
   66    | exp • DOLLAR ID
   67    | exp • OPEMONLIST ID
   68    | exp • exp_simple aux ID

    VALBOOL     desplazar e ir al estado 66
    LLAVEIZQ    desplazar e ir al estado 67
    OPEBIN      desplazar e ir al estado 105
    DOLLAR      desplazar e ir al estado 106
    OPEMONLIST  desplazar e ir al estado 107
    OPEBINLIST  desplazar e ir al estado 108
    PLUS        desplazar e ir al estado 109
    MINUS       desplazar e ir al estado 110
    TIMES       desplazar e ir al estado 111
    CHAR        desplazar e ir al estado 71
    ID          desplazar e ir al estado 112

    $default  reduce usando la regla 47 (datos_entrada)

    exp_simple  ir al estado 113
    op_signo    ir al estado 76


Estado 96

   32 sentencias: sentencias CIN sentencia_entrada PYC •

    $default  reduce usando la regla 32 (sentencias)


Estado 97

   52 dato_salida: CADENA •

    $default  reduce usando la regla 52 (dato_salida)


Estado 98

   48 sentencia_salida: ANT datos_salida •
   49 datos_salida: datos_salida • SIG dato_salida

    SIG  desplazar e ir al estado 132

    $default  reduce usando la regla 48 (sentencia_salida)


Estado 99

   50 datos_salida: dato_salida •

    $default  reduce usando la regla 50 (datos_salida)


Estado 100

   51 dato_salida: exp •
   59 exp: exp • PLUS termino
   60    | exp • MINUS termino
   61    | exp • TIMES termino
   62    | exp • OPEBIN termino
   63    | exp • OPEBINLIST termino
   65    | exp • ID exp_lista_ID
   66    | exp • DOLLAR ID
   67    | exp • OPEMONLIST ID
   68    | exp • exp_simple aux ID

    VALBOOL     desplazar e ir al estado 66
    LLAVEIZQ    desplazar e ir al estado 67
    OPEBIN      desplazar e ir al estado 105
    DOLLAR      desplazar e ir al estado 106
    OPEMONLIST  desplazar e ir al estado 107
    OPEBINLIST  desplazar e ir al estado 108
    PLUS        desplazar e ir al estado 109
    MINUS       desplazar e ir al estado 110
    TIMES       desplazar e ir al estado 111
    CHAR        desplazar e ir al estado 71
    ID          desplazar e ir al estado 112

    $default  reduce usando la regla 51 (dato_salida)

    exp_simple  ir al estado 113
    op_signo    ir al estado 76


Estado 101

   33 sentencias: sentencias COUT sentencia_salida PYC •

    $default  reduce usando la regla 33 (sentencias)


Estado 102

   87 exp_simple: LLAVEIZQ ID • LLAVEDCH

    LLAVEDCH  desplazar e ir al estado 133


Estado 103

   83 termino: OPEMON exp_simple •

    $default  reduce usando la regla 83 (termino)


Estado 104

   34 sentencias: sentencias RETURN sentencia_return PYC •

    $default  reduce usando la regla 34 (sentencias)


Estado 105

   62 exp: exp OPEBIN • termino

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    termino     ir al estado 134
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 106

   66 exp: exp DOLLAR • ID

    ID  desplazar e ir al estado 135


Estado 107

   67 exp: exp OPEMONLIST • ID

    ID  desplazar e ir al estado 136


Estado 108

   63 exp: exp OPEBINLIST • termino

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    termino     ir al estado 137
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 109

   59 exp: exp PLUS • termino
   90 op_signo: PLUS •

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    $default  reduce usando la regla 90 (op_signo)

    termino     ir al estado 138
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 110

   60 exp: exp MINUS • termino
   91 op_signo: MINUS •

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    $default  reduce usando la regla 91 (op_signo)

    termino     ir al estado 139
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 111

   61 exp: exp TIMES • termino

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    termino     ir al estado 140
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 112

   65 exp: exp ID • exp_lista_ID

    SIG         desplazar e ir al estado 141
    ANT         desplazar e ir al estado 142
    OPEBINLIST  desplazar e ir al estado 143
    AT          desplazar e ir al estado 144
    MINUSMINUS  desplazar e ir al estado 145
    TIMESTIMES  desplazar e ir al estado 146
    PLUS        desplazar e ir al estado 147
    MINUS       desplazar e ir al estado 148
    TIMES       desplazar e ir al estado 149

    exp_lista_ID  ir al estado 150


Estado 113

   68 exp: exp exp_simple • aux ID

    PLUS   desplazar e ir al estado 151
    TIMES  desplazar e ir al estado 152

    aux  ir al estado 153


Estado 114

   88 num: NUMERO •

    $default  reduce usando la regla 88 (num)


Estado 115

   89 num: ENTERO •

    $default  reduce usando la regla 89 (num)


Estado 116

   84 exp_simple: op_signo num •

    $default  reduce usando la regla 84 (exp_simple)


Estado 117

   17 items: items • COMA exp_simple
   55 sentencia_funcion: items •

    COMA  desplazar e ir al estado 154

    $default  reduce usando la regla 55 (sentencia_funcion)


Estado 118

   36 sentencias: sentencias ID PARIZQ sentencia_funcion • PARDCH PYC

    PARDCH  desplazar e ir al estado 155


Estado 119

   18 items: exp_simple •

    $default  reduce usando la regla 18 (items)


Estado 120

   40 sentencia_asig: CORIZQ • items CORDCH
   41               | CORIZQ • CADENA CORDCH

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71
    CADENA    desplazar e ir al estado 156

    $default  reduce usando la regla 19 (items)

    items       ir al estado 157
    exp_simple  ir al estado 119
    op_signo    ir al estado 76


Estado 121

   29 sentencias: sentencias ID ASING sentencia_asig • PYC

    PYC  desplazar e ir al estado 158


Estado 122

   39 sentencia_asig: exp •
   59 exp: exp • PLUS termino
   60    | exp • MINUS termino
   61    | exp • TIMES termino
   62    | exp • OPEBIN termino
   63    | exp • OPEBINLIST termino
   65    | exp • ID exp_lista_ID
   66    | exp • DOLLAR ID
   67    | exp • OPEMONLIST ID
   68    | exp • exp_simple aux ID

    VALBOOL     desplazar e ir al estado 66
    LLAVEIZQ    desplazar e ir al estado 67
    OPEBIN      desplazar e ir al estado 105
    DOLLAR      desplazar e ir al estado 106
    OPEMONLIST  desplazar e ir al estado 107
    OPEBINLIST  desplazar e ir al estado 108
    PLUS        desplazar e ir al estado 109
    MINUS       desplazar e ir al estado 110
    TIMES       desplazar e ir al estado 111
    CHAR        desplazar e ir al estado 71
    ID          desplazar e ir al estado 112

    $default  reduce usando la regla 39 (sentencia_asig)

    exp_simple  ir al estado 113
    op_signo    ir al estado 76


Estado 123

   23 cabec_funcion: tipo_var ID PARIZQ parametros • PARDCH
   24 parametros: parametros • COMA parametro

    PARDCH  desplazar e ir al estado 159
    COMA    desplazar e ir al estado 160


Estado 124

   25 parametros: parametro •

    $default  reduce usando la regla 25 (parametros)


Estado 125

   27 parametro: tipo_var • ID

    ID  desplazar e ir al estado 161


Estado 126

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID ASING • CORIZQ asig_const_lista

    CORIZQ  desplazar e ir al estado 162


Estado 127

   13 cuerpo_declar_const: TIPOCONST tipo_var_elem ID ASING exp_simple •

    $default  reduce usando la regla 13 (cuerpo_declar_const)


Estado 128

   44 sentencia_while: PARIZQ exp PARDCH • bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 163


Estado 129

   54 sentencia_do_until: bloque UNTIL PARIZQ • exp PARDCH

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp         ir al estado 164
    termino     ir al estado 74
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 130

   42 sentencia_if: PARIZQ exp PARDCH • bloque
   43             | PARIZQ exp PARDCH • bloque ELSE bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 165


Estado 131

   46 datos_entrada: datos_entrada SIG • exp

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp         ir al estado 166
    termino     ir al estado 74
    exp_simple  ir al estado 75
    op_signo    ir al estado 76


Estado 132

   49 datos_salida: datos_salida SIG • dato_salida

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    OPEMON    desplazar e ir al estado 68
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71
    CADENA    desplazar e ir al estado 97

    dato_salida  ir al estado 167
    exp          ir al estado 100
    termino      ir al estado 74
    exp_simple   ir al estado 75
    op_signo     ir al estado 76


Estado 133

   87 exp_simple: LLAVEIZQ ID LLAVEDCH •

    $default  reduce usando la regla 87 (exp_simple)


Estado 134

   62 exp: exp OPEBIN termino •

    $default  reduce usando la regla 62 (exp)


Estado 135

   66 exp: exp DOLLAR ID •

    $default  reduce usando la regla 66 (exp)


Estado 136

   67 exp: exp OPEMONLIST ID •

    $default  reduce usando la regla 67 (exp)


Estado 137

   63 exp: exp OPEBINLIST termino •

    $default  reduce usando la regla 63 (exp)


Estado 138

   59 exp: exp PLUS termino •

    $default  reduce usando la regla 59 (exp)


Estado 139

   60 exp: exp MINUS termino •

    $default  reduce usando la regla 60 (exp)


Estado 140

   61 exp: exp TIMES termino •

    $default  reduce usando la regla 61 (exp)


Estado 141

   69 exp_lista_ID: SIG •

    $default  reduce usando la regla 69 (exp_lista_ID)


Estado 142

   70 exp_lista_ID: ANT •

    $default  reduce usando la regla 70 (exp_lista_ID)


Estado 143

   77 exp_lista_ID: OPEBINLIST • exp_simple

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp_simple  ir al estado 168
    op_signo    ir al estado 76


Estado 144

   71 exp_lista_ID: AT • num op_ternario

    NUMERO  desplazar e ir al estado 114
    ENTERO  desplazar e ir al estado 115

    num  ir al estado 169


Estado 145

   72 exp_lista_ID: MINUSMINUS • num

    NUMERO  desplazar e ir al estado 114
    ENTERO  desplazar e ir al estado 115

    num  ir al estado 170


Estado 146

   73 exp_lista_ID: TIMESTIMES • ID

    ID  desplazar e ir al estado 171


Estado 147

   74 exp_lista_ID: PLUS • exp_simple

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp_simple  ir al estado 172
    op_signo    ir al estado 76


Estado 148

   75 exp_lista_ID: MINUS • exp_simple

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp_simple  ir al estado 173
    op_signo    ir al estado 76


Estado 149

   76 exp_lista_ID: TIMES • exp_simple

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp_simple  ir al estado 174
    op_signo    ir al estado 76


Estado 150

   65 exp: exp ID exp_lista_ID •

    $default  reduce usando la regla 65 (exp)


Estado 151

   80 aux: PLUS •

    $default  reduce usando la regla 80 (aux)


Estado 152

   81 aux: TIMES •

    $default  reduce usando la regla 81 (aux)


Estado 153

   68 exp: exp exp_simple aux • ID

    ID  desplazar e ir al estado 175


Estado 154

   17 items: items COMA • exp_simple

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp_simple  ir al estado 176
    op_signo    ir al estado 76


Estado 155

   36 sentencias: sentencias ID PARIZQ sentencia_funcion PARDCH • PYC

    PYC  desplazar e ir al estado 177


Estado 156

   41 sentencia_asig: CORIZQ CADENA • CORDCH

    CORDCH  desplazar e ir al estado 178


Estado 157

   17 items: items • COMA exp_simple
   40 sentencia_asig: CORIZQ items • CORDCH

    CORDCH  desplazar e ir al estado 179
    COMA    desplazar e ir al estado 154


Estado 158

   29 sentencias: sentencias ID ASING sentencia_asig PYC •

    $default  reduce usando la regla 29 (sentencias)


Estado 159

   23 cabec_funcion: tipo_var ID PARIZQ parametros PARDCH •

    $default  reduce usando la regla 23 (cabec_funcion)


Estado 160

   24 parametros: parametros COMA • parametro

    TIPOINT    desplazar e ir al estado 11
    TIPOCHAR   desplazar e ir al estado 12
    TIPOVAR    desplazar e ir al estado 13
    TIPOLISTA  desplazar e ir al estado 20

    parametro      ir al estado 180
    tipo_var_elem  ir al estado 24
    tipo_var       ir al estado 125


Estado 161

   27 parametro: tipo_var ID •

    $default  reduce usando la regla 27 (parametro)


Estado 162

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID ASING CORIZQ • asig_const_lista

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71
    CADENA    desplazar e ir al estado 181

    $default  reduce usando la regla 19 (items)

    asig_const_lista  ir al estado 182
    items             ir al estado 183
    exp_simple        ir al estado 119
    op_signo          ir al estado 76


Estado 163

   44 sentencia_while: PARIZQ exp PARDCH bloque •

    $default  reduce usando la regla 44 (sentencia_while)


Estado 164

   54 sentencia_do_until: bloque UNTIL PARIZQ exp • PARDCH
   59 exp: exp • PLUS termino
   60    | exp • MINUS termino
   61    | exp • TIMES termino
   62    | exp • OPEBIN termino
   63    | exp • OPEBINLIST termino
   65    | exp • ID exp_lista_ID
   66    | exp • DOLLAR ID
   67    | exp • OPEMONLIST ID
   68    | exp • exp_simple aux ID

    VALBOOL     desplazar e ir al estado 66
    PARDCH      desplazar e ir al estado 184
    LLAVEIZQ    desplazar e ir al estado 67
    OPEBIN      desplazar e ir al estado 105
    DOLLAR      desplazar e ir al estado 106
    OPEMONLIST  desplazar e ir al estado 107
    OPEBINLIST  desplazar e ir al estado 108
    PLUS        desplazar e ir al estado 109
    MINUS       desplazar e ir al estado 110
    TIMES       desplazar e ir al estado 111
    CHAR        desplazar e ir al estado 71
    ID          desplazar e ir al estado 112

    exp_simple  ir al estado 113
    op_signo    ir al estado 76


Estado 165

   42 sentencia_if: PARIZQ exp PARDCH bloque •
   43             | PARIZQ exp PARDCH bloque • ELSE bloque

    ELSE  desplazar e ir al estado 185

    $default  reduce usando la regla 42 (sentencia_if)


Estado 166

   46 datos_entrada: datos_entrada SIG exp •
   59 exp: exp • PLUS termino
   60    | exp • MINUS termino
   61    | exp • TIMES termino
   62    | exp • OPEBIN termino
   63    | exp • OPEBINLIST termino
   65    | exp • ID exp_lista_ID
   66    | exp • DOLLAR ID
   67    | exp • OPEMONLIST ID
   68    | exp • exp_simple aux ID

    VALBOOL     desplazar e ir al estado 66
    LLAVEIZQ    desplazar e ir al estado 67
    OPEBIN      desplazar e ir al estado 105
    DOLLAR      desplazar e ir al estado 106
    OPEMONLIST  desplazar e ir al estado 107
    OPEBINLIST  desplazar e ir al estado 108
    PLUS        desplazar e ir al estado 109
    MINUS       desplazar e ir al estado 110
    TIMES       desplazar e ir al estado 111
    CHAR        desplazar e ir al estado 71
    ID          desplazar e ir al estado 112

    $default  reduce usando la regla 46 (datos_entrada)

    exp_simple  ir al estado 113
    op_signo    ir al estado 76


Estado 167

   49 datos_salida: datos_salida SIG dato_salida •

    $default  reduce usando la regla 49 (datos_salida)


Estado 168

   77 exp_lista_ID: OPEBINLIST exp_simple •

    $default  reduce usando la regla 77 (exp_lista_ID)


Estado 169

   71 exp_lista_ID: AT num • op_ternario

    PLUSPLUS  desplazar e ir al estado 186

    $default  reduce usando la regla 79 (op_ternario)

    op_ternario  ir al estado 187


Estado 170

   72 exp_lista_ID: MINUSMINUS num •

    $default  reduce usando la regla 72 (exp_lista_ID)


Estado 171

   73 exp_lista_ID: TIMESTIMES ID •

    $default  reduce usando la regla 73 (exp_lista_ID)


Estado 172

   74 exp_lista_ID: PLUS exp_simple •

    $default  reduce usando la regla 74 (exp_lista_ID)


Estado 173

   75 exp_lista_ID: MINUS exp_simple •

    $default  reduce usando la regla 75 (exp_lista_ID)


Estado 174

   76 exp_lista_ID: TIMES exp_simple •

    $default  reduce usando la regla 76 (exp_lista_ID)


Estado 175

   68 exp: exp exp_simple aux ID •

    $default  reduce usando la regla 68 (exp)


Estado 176

   17 items: items COMA exp_simple •

    $default  reduce usando la regla 17 (items)


Estado 177

   36 sentencias: sentencias ID PARIZQ sentencia_funcion PARDCH PYC •

    $default  reduce usando la regla 36 (sentencias)


Estado 178

   41 sentencia_asig: CORIZQ CADENA CORDCH •

    $default  reduce usando la regla 41 (sentencia_asig)


Estado 179

   40 sentencia_asig: CORIZQ items CORDCH •

    $default  reduce usando la regla 40 (sentencia_asig)


Estado 180

   24 parametros: parametros COMA parametro •

    $default  reduce usando la regla 24 (parametros)


Estado 181

   16 asig_const_lista: CADENA • CORDCH

    CORDCH  desplazar e ir al estado 188


Estado 182

   14 cuerpo_declar_const: TIPOCONST TIPOLISTA tipo_var_elem ID ASING CORIZQ asig_const_lista •

    $default  reduce usando la regla 14 (cuerpo_declar_const)


Estado 183

   15 asig_const_lista: items • CORDCH
   17 items: items • COMA exp_simple

    CORDCH  desplazar e ir al estado 189
    COMA    desplazar e ir al estado 154


Estado 184

   54 sentencia_do_until: bloque UNTIL PARIZQ exp PARDCH •

    $default  reduce usando la regla 54 (sentencia_do_until)


Estado 185

   43 sentencia_if: PARIZQ exp PARDCH bloque ELSE • bloque

    LLAVEIZQ  desplazar e ir al estado 5

    bloque  ir al estado 190


Estado 186

   78 op_ternario: PLUSPLUS • exp_simple

    VALBOOL   desplazar e ir al estado 66
    LLAVEIZQ  desplazar e ir al estado 67
    PLUS      desplazar e ir al estado 69
    MINUS     desplazar e ir al estado 70
    CHAR      desplazar e ir al estado 71

    exp_simple  ir al estado 191
    op_signo    ir al estado 76


Estado 187

   71 exp_lista_ID: AT num op_ternario •

    $default  reduce usando la regla 71 (exp_lista_ID)


Estado 188

   16 asig_const_lista: CADENA CORDCH •

    $default  reduce usando la regla 16 (asig_const_lista)


Estado 189

   15 asig_const_lista: items CORDCH •

    $default  reduce usando la regla 15 (asig_const_lista)


Estado 190

   43 sentencia_if: PARIZQ exp PARDCH bloque ELSE bloque •

    $default  reduce usando la regla 43 (sentencia_if)


Estado 191

   78 op_ternario: PLUSPLUS exp_simple •

    $default  reduce usando la regla 78 (op_ternario)
